{"version":3,"sources":["store.js","storeApi.js","useWeb3.js","ethereum.png","App.js","index.js"],"names":["StoreContext","createContext","initialState","message","balance","address","reducer","state","action","type","Error","StoreProvider","children","useReducer","dispatch","Provider","value","useStoreApi","useContext","setAddress","newAddress","setBalance","newBalance","useWeb3","useState","web3","setWeb3","useEffect","instance","window","ethereum","Web3","error","console","provider","HttpProvider","App","getUserAccount","a","enable","eth","getAccounts","then","accounts","updateBalance","alert","fromAddress","getBalance","utils","fromWei","sendTransaction","e","preventDefault","amount","target","recipient","from","to","toWei","className","src","EthLogo","alt","Button","onClick","variant","color","onSubmit","TextField","required","label","inputProps","step","style","margin","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cc2f9ee2.chunk.js","sourcesContent":["import React, { useReducer, useContext, createContext } from \"react\";\n\nconst StoreContext = createContext();\nconst initialState = {\n  message: \"\",\n  balance: 0,\n  address: null\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"NEW-ADDRESS\":\n      return {\n        ...state,\n        address: action.address,\n        message: action.message\n      };\n    case \"SET-BALANCE\":\n      return {\n        ...state,\n        balance: action.balance\n      };\n    default:\n      throw new Error(`Unknown type of action: ${action.type}`);\n  }\n};\n\nexport const StoreProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  return (\n    <StoreContext.Provider value={{ state, dispatch }}>\n      {children}\n    </StoreContext.Provider>\n  );\n};\n\nexport const useStore = () => useContext(StoreContext);\n","import { useStore } from \"./store\";\n\nexport const useStoreApi = () => {\n  const { state, dispatch } = useStore();\n\n  return {\n    balance: state.balance,\n    address: state.address,\n    message: state.message,\n    setAddress: newAddress => {\n      dispatch({\n        type: \"NEW-ADDRESS\",\n        address: newAddress,\n        message: \"New address added successfully!\"\n      });\n    },\n    setBalance: newBalance => {\n      dispatch({\n        type: \"SET-BALANCE\",\n        balance: newBalance\n      });\n    }\n  };\n};\n","import { useEffect, useState } from \"react\";\nimport Web3 from \"web3\";\n\nconst useWeb3 = () => {\n  const [web3, setWeb3] = useState(null);\n\n  useEffect(() => {\n    var instance;\n    if (window.ethereum) {\n      // set up a new provider\n      try {\n        instance = new Web3(window.ethereum);\n      } catch (error) {\n        console.error(error);\n      }\n    } else if (window.web3) {\n      instance = new Web3(window.web3);\n    } else {\n      // fallback on localhost provider\n      const provider = new Web3.provider.HttpProvider(\"http://127.0.0.1:7545\");\n      instance = new Web3(provider);\n    }\n    setWeb3(instance);\n  }, []);\n  return web3;\n};\n\nexport default useWeb3;\n","export default __webpack_public_path__ + \"static/media/ethereum.69b885f4.png\";","import { useStoreApi } from \"./storeApi\";\nimport useWeb3 from \"./useWeb3\";\nimport { Button, TextField } from \"@material-ui/core\";\n\nimport \"./App.css\";\nimport EthLogo from \"./ethereum.png\";\n\nfunction App() {\n  const { balance, address, message, setAddress, setBalance } = useStoreApi();\n  const web3 = useWeb3();\n\n  // get user account on button click\n  const getUserAccount = async () => {\n    if (window.ethereum) {\n      try {\n        await window.ethereum.enable();\n        web3.eth.getAccounts().then(accounts => {\n          setAddress(accounts[0]);\n          updateBalance(accounts[0]);\n        });\n      } catch (error) {\n        console.error(error);\n      }\n    } else {\n      alert(\"Metamask extensions not detected!\");\n    }\n  };\n\n  const updateBalance = async fromAddress => {\n    await web3.eth.getBalance(fromAddress).then(value => {\n      setBalance(web3.utils.fromWei(value, \"ether\"));\n    });\n  };\n\n  const sendTransaction = async e => {\n    e.preventDefault();\n    const amount = e.target[0].value;\n    const recipient = e.target[1].value;\n    await web3.eth.sendTransaction({\n      from: address,\n      to: recipient,\n      value: web3.utils.toWei(amount, \"ether\")\n    });\n    updateBalance(address);\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={EthLogo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          <code>My first app Foo</code>\n        </p>\n        {address ? (\n          <>\n            <p> Your account: {address}</p>\n            <p> Balance: {balance} </p>\n          </>\n        ) : null}\n        <Button\n          onClick={() => getUserAccount()}\n          variant=\"outlined\"\n          color=\"primary\"\n        >\n          Connect your wallet\n        </Button>\n        {message ? (\n          <p>\n            <code>{message}</code>\n          </p>\n        ) : null}\n        <form onSubmit={e => sendTransaction(e)}>\n          <TextField\n            required\n            label=\"Amount\"\n            inputProps={{ step: \"any\" }}\n            type=\"number\"\n            variant=\"filled\"\n          />\n          <TextField required label=\"Recipient Address\" variant=\"filled\" />\n          <Button\n            style={{ margin: \"10px\" }}\n            type=\"submit\"\n            variant=\"outlined\"\n            color=\"default\"\n          >\n            Send Crypto\n          </Button>\n        </form>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { StoreProvider } from \"./store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <StoreProvider>\n      <App />\n    </StoreProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}